{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState: {\n    value: []\n  },\n  reducers: {\n    addBasket: (state, action) => {\n      state.value = state.value.push(action.payload);\n    },\n    removeBasket: (state, action) => {\n      state.value = state.value.filter(p => p.id !== action.payload);\n    },\n    setBasket: (state, action) => {\n      state.value = action.payload;\n    },\n    resetBasket: state => {\n      state.value = [];\n    },\n    addBasketNonAmount: (state, action) => {\n      const newState = [...state, action.payload];\n      console.log(\"newState : \", newState);\n      state.value = newState;\n      return newState;\n    },\n    addBasketHasAmount: (state, action) => {// newState.find((p) => p.id === action.payload.id).amount = newState.findIndex((p) => p.id === action.payload.id).amount + 1;\n      // state.value = newState;\n    }\n  }\n});\nexport const {\n  addBasket,\n  removeBasket,\n  setBasket,\n  resetBasket,\n  addBasketNonAmount,\n  addBasketHasAmount\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"names":["createSlice","basketSlice","name","initialState","value","reducers","addBasket","state","action","push","payload","removeBasket","filter","p","id","setBasket","resetBasket","addBasketNonAmount","newState","console","log","addBasketHasAmount","actions","reducer"],"sources":["/Users/imac/Desktop/ReactApps/spendmoney/src/redux/basket/basketSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState: {\n    value: [],\n  },\n  reducers: {\n    addBasket: (state, action) => {\n      state.value = state.value.push(action.payload);\n    },\n    removeBasket: (state, action) => {\n      state.value = state.value.filter((p) => p.id !== action.payload);\n    },\n    setBasket: (state, action) => {\n      state.value = action.payload;\n    },\n    resetBasket: (state) => {\n      state.value = [];\n    },\n    addBasketNonAmount: (state, action) => {\n      const newState = [...state, action.payload];\n      console.log(\"newState : \", newState)\n\n      state.value = newState;\n\n      return newState;\n    },\n    addBasketHasAmount: (state, action) => {\n\n\n      // newState.find((p) => p.id === action.payload.id).amount = newState.findIndex((p) => p.id === action.payload.id).amount + 1;\n      // state.value = newState;\n    }\n  },\n});\n\nexport const {\n  addBasket,\n  removeBasket,\n  setBasket,\n  resetBasket,\n  addBasketNonAmount,\n  addBasketHasAmount,\n} = basketSlice.actions;\n\nexport default basketSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAGD,WAAW,CAAC;EACrCE,IAAI,EAAE,QAD+B;EAErCC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFuB;EAKrCC,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBD,MAAM,CAACE,OAAxB,CAAd;IACD,CAHO;IAIRC,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC/BD,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYQ,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACE,OAA1C,CAAd;IACD,CANO;IAORK,SAAS,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACE,OAArB;IACD,CATO;IAURM,WAAW,EAAGT,KAAD,IAAW;MACtBA,KAAK,CAACH,KAAN,GAAc,EAAd;IACD,CAZO;IAaRa,kBAAkB,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;MACrC,MAAMU,QAAQ,GAAG,CAAC,GAAGX,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAjB;MACAS,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,QAA3B;MAEAX,KAAK,CAACH,KAAN,GAAcc,QAAd;MAEA,OAAOA,QAAP;IACD,CApBO;IAqBRG,kBAAkB,EAAE,CAACd,KAAD,EAAQC,MAAR,KAAmB,CAGrC;MACA;IACD;EA1BO;AAL2B,CAAD,CAA/B;AAmCP,OAAO,MAAM;EACXF,SADW;EAEXK,YAFW;EAGXI,SAHW;EAIXC,WAJW;EAKXC,kBALW;EAMXI;AANW,IAOTpB,WAAW,CAACqB,OAPT;AASP,eAAerB,WAAW,CAACsB,OAA3B"},"metadata":{},"sourceType":"module"}